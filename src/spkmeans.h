void NormalizeU(int dim, int k, double** u);
void BuildU(int dim, int k, double** jac, double** u);
void transpose(int n, double** mat);
int eigengap(int dim, double* eigenVals);
double** BuildLap(double** Diag, double** Adj, int dim);
void eye_minus(int dim, double** mat);
void BuildDDG(double** Adj, int dim, double **diag);
void WAMatrix(double** data, int dim, double** adj, int features);
double CalcWeight(double* point1, double* point, int features);
void read_csv_file(char *filename, double** data);
void print_mat(double** mat, int dim, int cols);
double atof(const char *str);
char *strtok(char *str, const char *delim);
int get_feature_num(char* file);
int get_points_num(char* file);
void init_data_rows(double** data, int rows, int cols);
void multiply_by_Diag(int dim, double** A, double** B);
void multiply_diag_by(int dim, double** A, double** B);
void Jacobi_rotate ( double **A, double **R, int k, int l, int n );
double* offdiag(double** A, int n);
void BuildJacobi(int dim, double** mat, double** jacobi);
void perform(int k, char *goal, double **data, int dim, int features);
void eigsrt(double *ev, double **vec, int n);
void kmeans(double **data, double **initcents, int dim, int k);
void new_mean(double *new_cent, double **data, int dim, int k, int *classif, int m);
void zeroes(double **mat, int dim);
int minIndx(double *arr, int dim);
double calcDistance(double *point1, double *point2, int dim);
double diff(double *p1, double *p2, int k);
void update_cents(double **newcents, double **oldcents, int k);

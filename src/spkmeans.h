void NormalizeU(int dim, int k, double** u);
void BuildU(int dim, int k, double** jac, double** u);
void transpose(int n, double** mat);
int eigengap(int dim, double* eigenVals);
int cmp(const void *x, const void *y);
double** BuildLap(double** Diag, double** Adj, int dim);
void eye_minus(int dim, double** mat);
void BuildDDG(double** Adj, int dim, double **diag);
void WAMatrix(double** data, int dim, double** adj);
double CalcWeight(double* point1, double* point);
void read_csv_file(char *filename, double** data);
void print_mat(double** mat, int dim, int cols);
double atof(const char *str);
char *strtok(char *str, const char *delim);
int get_feature_num(char* file);
int get_points_num(char* file);
void init_data_rows(double** data, int rows, int cols);
void multiply_by_Diag(int dim, double** A, double** B);
void multiply_diag_by(int dim, double** A, double** B);
void Jacobi_rotate ( double **A, double **R, int k, int l, int n );
double* offdiag(double** A, int n);
void BuildJacobi(int dim, double** mat, double** jacobi);
void perform(char *goal, double **data, int dim);
void eigsrt(double *ev, double **vec, int n);